#include <iostream>
#include <algorithm>
#include <vector>
#include <stack>

using namespace std;

int main() {
	int n;
	cin >> n;

	vector<int> v(n);
	for (int i = 0; i < n; i++) {
		cin >> v[i];
	}

	int max_index = 0;
	vector<int> dp(n, 1);
	vector<int> prev(n, 0);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < i; j++) {
			if (v[i] > v[j] && dp[i] < dp[j]+1) {
				dp[i] = dp[j]+1;
				prev[i] = j;
			}
		}
		if (dp[i] > dp[max_index]) {
			max_index = i;
		}
	}

	cout << dp[max_index] << endl;

	vector<int> result(n+1);
	int idx = max_index;
	int cnt = dp[max_index];
	while (cnt!=0) {
		result[cnt] = v[idx];
		idx = prev[idx];
		cnt--;
	}

	cnt = dp[max_index];
	for (int i = 1; i <= cnt; i++)
		cout << result[i] << " ";

	return 0;
}